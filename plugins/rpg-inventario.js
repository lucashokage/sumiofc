const handler = async (m, { conn, usedPrefix }) => {
  const user = global.db.data.users[m.sender]

  // Verificar que el usuario existe
  if (!user) {
    return conn.reply(m.chat, "‚ùå No se encontraron datos de usuario.", m)
  }

  // Funci√≥n para formatear n√∫meros grandes
  const formatNumber = (num) => {
    return num ? num.toLocaleString() : "0"
  }

  const inventario = `
‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£
‚îÉ *INVENTARIO DE ${conn.getName(m.sender)}*
‚îÉ
‚îÉ üí∞ *ECONOM√çA*
‚îÉ ‚Ä¢ ${global.moneda || "üí∏"}: ${formatNumber(user.coin || 0)}
‚îÉ ‚Ä¢ üíé Diamantes: ${formatNumber(user.diamonds || 0)}
‚îÉ ‚Ä¢ üè¶ Banco: ${formatNumber(user.bank || 0)}
‚îÉ
‚îÉ üß™ *POCIONES Y CONSUMIBLES*
‚îÉ ‚Ä¢ üß™ Pociones: ${formatNumber(user.potion || 0)}
‚îÉ ‚Ä¢ üçó Comida: ${formatNumber(user.food || 0)}
‚îÉ
‚îÉ üîÆ *RECURSOS MINADOS*
‚îÉ ‚Ä¢ ü™µ Madera: ${formatNumber(user.wood || 0)}
‚îÉ ‚Ä¢ ü™® Piedra: ${formatNumber(user.stone || 0)}
‚îÉ ‚Ä¢ üî© Hierro: ${formatNumber(user.iron || 0)}
‚îÉ ‚Ä¢ üèÖ Oro: ${formatNumber(user.gold || 0)}
‚îÉ ‚Ä¢ ‚ô¶Ô∏è Esmeralda: ${formatNumber(user.emerald || 0)}
‚îÉ ‚Ä¢ üïã Carb√≥n: ${formatNumber(user.coal || 0)}
‚îÉ ‚Ä¢ ‚ú® Experiencia: ${formatNumber(user.exp || 0)}
‚îÉ
‚îÉ üêæ *ANIMALES CAZADOS*
‚îÉ ‚Ä¢ üêÇ B√∫falo: ${formatNumber(user.banteng || 0)}
‚îÉ ‚Ä¢ üêÖ Tigre: ${formatNumber(user.harimau || 0)}
‚îÉ ‚Ä¢ üêò Elefante: ${formatNumber(user.gajah || 0)}
‚îÉ ‚Ä¢ üêê Cabra: ${formatNumber(user.kambing || 0)}
‚îÉ ‚Ä¢ üêº Panda: ${formatNumber(user.panda || 0)}
‚îÉ ‚Ä¢ üêä Cocodrilo: ${formatNumber(user.buaya || 0)}
‚îÉ ‚Ä¢ üêÉ B√∫falo de agua: ${formatNumber(user.kerbau || 0)}
‚îÉ ‚Ä¢ üêÆ Vaca: ${formatNumber(user.sapi || 0)}
‚îÉ ‚Ä¢ üêí Mono: ${formatNumber(user.monyet || 0)}
‚îÉ ‚Ä¢ üêó Jabal√≠: ${formatNumber(user.babihutan || 0)}
‚îÉ ‚Ä¢ üêñ Cerdo: ${formatNumber(user.babi || 0)}
‚îÉ ‚Ä¢ üêì Pollo: ${formatNumber(user.ayam || 0)}
‚îÉ
‚îÉ ‚öîÔ∏è *ESTAD√çSTICAS*
‚îÉ ‚Ä¢ ‚ù§Ô∏è Salud: ${user.health || 0}/100
‚îÉ ‚Ä¢ ‚ö° Experiencia: ${formatNumber(user.exp || 0)}
‚îÉ ‚Ä¢ üèÜ Nivel: ${user.level || 0}
‚îÉ ‚Ä¢ üèÖ Rango: ${user.role || "Novato"}
‚îÉ
‚îÉ üõ†Ô∏è *DURABILIDAD DE HERRAMIENTAS*
‚îÉ ‚Ä¢ ‚õèÔ∏è Pico: ${user.pickaxedurability || 0}/100
‚îÉ
‚îÉ ‚è±Ô∏è *COOLDOWNS*
‚îÉ ‚Ä¢ ‚õèÔ∏è Minar: ${user.lastmiming ? formatCooldown(user.lastmiming) : "Disponible"}
‚îÉ ‚Ä¢ üèπ Cazar: ${user.lastberburu ? formatCooldown(user.lastberburu) : "Disponible"}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚¨£

Usa *${usedPrefix}shop* para comprar objetos.
Usa *${usedPrefix}minar* para obtener recursos.
Usa *${usedPrefix}cazar* para obtener animales.`

  conn.reply(m.chat, inventario, m)
}

// Funci√≥n para formatear el tiempo de cooldown
function formatCooldown(lastTime) {
  const now = new Date()
  const miningCooldown = 600000 // 10 minutos para minar
  const huntingCooldown = 2700000 // 45 minutos para cazar

  const miningTime = lastTime + miningCooldown - now
  const huntingTime = lastTime + huntingCooldown - now

  if (miningTime > 0) {
    return msToTime(miningTime)
  } else if (huntingTime > 0) {
    return msToTime(huntingTime)
  } else {
    return "Disponible"
  }
}

// Funci√≥n para convertir milisegundos a formato de tiempo
function msToTime(duration) {
  const seconds = Math.floor((duration / 1000) % 60)
  const minutes = Math.floor((duration / (1000 * 60)) % 60)

  return minutes + " m y " + seconds + " s"
}

handler.help = ["inventario"]
handler.tags = ["rpg"]
handler.command = ["inventario", "inventory", "inv"]
handler.group = true
handler.register = true

export default handler
